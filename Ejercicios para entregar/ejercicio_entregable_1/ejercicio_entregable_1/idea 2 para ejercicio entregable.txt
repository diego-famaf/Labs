unsigned int array_peak_sequential(int a[], unsigned int length){
    unsigned int i = 0;
    if(has_cima(a, length) && length > 0){
        while(i < length && a[i] < a[i+1]){
            ++i;
        }
    }
    else{
        return -1;
    }
    return i;
}

bool has_cima(int a[], unsigned int length){
    unsigned int i = 0;
    unsigned int j = length -1;
    bool b = true;
    while(i < length && i!=j && b){
        if(a[i] < a[i+1]){
            ++i;
        }
        else if(a[j] < a[j-1]){
            --j;
        }
        else{
            b = false; 
        }
    }
    return i == j;
}

unsigned int array_peak_binary(int a[], unsigned int lft, unsigned int rgt){
    unsigned int mid;
    if (a[lft] > a[lft+1]) return lft;
    if (a[rgt] > a[rgt-1]) return rgt;

    while (lft <= rgt) {
        mid = (lft + rgt)/2;
        if (a[mid] < a[mid+1]){
            lft = mid+1;
        } else if(a[mid-1] > a[mid]){
            rgt = mid-1;
        } else if(a[mid] > a[mid+1] && a[mid] > a[mid-1]){
            return mid;
        }
        else{
            return -1;
        }
    }
    return -1;
}